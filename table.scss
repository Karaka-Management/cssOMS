.btn.order-up, .btn.order-down,
.btn.cancel-form, .btn.remove-form, .btn.update-form, .btn.save-form, .btn.form-action {
    color: var(--btn-bg);
}

thead {
    input[type=radio] {
        padding: 0;
        margin: 0;
        display: none;
    }

    label, span {
        display: inline-flex;
        align-items: center;

        & > a {
            display: inline-flex;
            align-items: center;
        }
    }
}

table {
    &.fixed {
        table-layout: fixed;
    }

    input[type=radio]:checked + i,
    input[type=checkbox]:checked + label i {
        color: var(--btn-bg);
    }

    .order-up, .order-down {
        cursor: pointer;
    }

    .sort-asc, .sort-desc, .filter {
        padding: 0;
        cursor: pointer;
    }

    &:not([id]) > thead .sort-asc, &:not([id]) > thead .sort-desc {
        display: none;
    }

    &.default {
        //border-radius: 4px;
        width: 100%;
        max-width: 100%;
        font-size: 0.9em;
        box-sizing: border-box;
        //overflow-x: auto;

        .disabled, .empty {
            color: var(--disabled-bg);
        }

        .empty {
            text-align: center;
        }

        caption {
            font-size: 1.5rem;
            font-weight: 400;
            border-bottom: 1px solid var(--bborder);
            background: var(--tcaption-bg);
            padding: .5rem;

            //border-top-left-radius: 4px;
            //border-top-right-radius: 4px;

            text-align: left;

            i {
                font-size: .8rem;
            }
        }

        tr, caption {
            height: 2.5rem;
        }

        td, th {
            padding: 3px 5px 3px 5px;
            white-space: nowrap;

            &:first-child {
                padding-left: 10px;
            }

            &:last-child {
                padding-right: 10px;
            }
        }

        tbody, tfoot {
            th {
                text-align: left;
            }

            th[colspan]:not([colspan="1"]) {
                text-align: center;
            }

            a {
                display: inline-flex;
                align-items: center;

                i {
                    margin-right: .5rem;
                }
            }
        }

        tbody {
            td, th {
                border-bottom: 1px solid var(--bborder2);
            }

            tr {
                &:last-child td, &:last-child th {
                    border: none;
                }

                &:nth-of-type(2n) {
                    background: var(--trow-bg);
                }

                &:nth-of-type(2n+1) {
                    background: var(--trow-bg-alt);
                }

                &:hover td, &:focus td {
                    background: var(--trow-bg-hover);
                    color: var(--default-c);
                }

                &:focus, &:hover {
                    outline: none;
                    transform: scale(1);
                    box-shadow: 0 0 5px var(--bborder);
                    color: var(--default-c);
                }
            }
        }

        thead {
            background: var(--thead-bg);
            color: var(--thead-c);

            td {
                border-bottom: 1px solid var(--bborder2);
            }

            input[type=radio] {
                display: none;

                &:checked + label {
                    color: var(--box-hl);;
                }
            }
        }
    }

    // @bug .sticky is broken for tables in a .slider
    //      The .slider is important to avoid overflowing. However, this prevents .sticky from working
    //      https://github.com/Karaka-Management/cssOMS/issues/28
    &.sticky thead {
        th, td {
            position: sticky;
            top: 0;
            z-index: 2;
            background: var(--thead-bg);

            & > * {
                vertical-align : middle;
            }
        }
    }

    &.list {
        th {
            text-align: left;
            padding: 2px 0 2px 0;
        }

        td {
            padding: 2px 5px 2px 5px;
        }
    }
}

@for $i from 1 through 10 {
    .fixed-#{$i} td:nth-child(#{$i}) {
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }
}

@media screen and (max-width: 600px) {
    table.popupTable {
        display: table;
        width: 100%;

        thead {
            display: none;
        }

        tbody {
            tr {
                height: auto;
                display: block;
                margin-bottom: .625em;
            }

            td {
                display: flex;
                font-size: .8rem;
                height: 2rem;
                line-height: 2rem;
                text-overflow: ellipsis;
                overflow: hidden;
                max-width: 100%;

                &:before {
                    content: attr(data-label);
                    margin-right: 10px;
                    font-weight: bold;
                }
            }
        }

        tfoot {
            // if not hidden colspan will cause problems and reduce width based on colspan value
            // 1/colspan_val
            display: none;
        }
    }
}